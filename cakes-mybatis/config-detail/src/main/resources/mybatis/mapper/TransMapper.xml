<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace要与对应接口的全限定名保持一致 -->
<mapper namespace="mybatis.mapper.TransMapper">

  <!--
    insert标签详解:
      id: 标识,与mapper接口方法名一致

      parameterType: 参数类型
        基本数据类型: int,                long,           boolean,           float,           double
        包装数据类型: java.lang.Integer,  java.lang.Long, java.lang.Boolean, java.lang.Float, java.lang.Double
        自定义类型:   mybatis.domain.Trans

      keyColumn="" keyProperty="" databaseId="" flushCache="" parameterMap="" statementType="" timeout="" useGeneratedKeys=""
  -->
  <insert id="insertTrans" parameterType="mybatis.domain.Trans">
    INSERT INTO `trans`(`trans_id`, `body`, `subject`, `amount`, `create_time`) VALUES (#{trans_id}, #{body}, #{subject}, #{amount}, #{create_time})
  </insert>

  <insert id="insertTransAndIdReturn" parameterType="mybatis.domain.Trans">
    <!--
     keyProperty: 实体中定义的属性名
     keyColumn: 数据库表中定义的字段名
     order: AFTER表示插入后的行为
     resultType: 返回值类型
     -->
    <selectKey keyProperty="id" keyColumn="id" order="AFTER" resultType="long">
      SELECT last_insert_id();
    </selectKey>

    INSERT INTO `trans`(`trans_id`, `body`, `subject`, `amount`, `create_time`) VALUES (#{trans_id}, #{body}, #{subject}, #{amount}, #{create_time})
  </insert>

  <update id="updateTrans" parameterType="mybatis.domain.Trans">
    UPDATE `trans` SET `body`=#{body},`subject`=#{subject},`amount`=#{amount} WHERE `trans_id` = #{trans_id}
  </update>

  <delete id="deleteTransById" parameterType="java.lang.Long">
    DELETE FROM `trans` WHERE `id` = #{id}
  </delete>

  <select id="selectOne" parameterType="java.lang.String" resultType="mybatis.domain.Trans">
    SELECT * FROM `trans` WHERE `trans_id` = #{trans_id}
  </select>

  <select id="selectByBody" parameterType="java.lang.String" resultType="mybatis.domain.Trans">
    <!--  Preparing: select * from `trans` where `body` like ? -->
    <!--  mybatis.mapper.TransMapper.selectByBody - ==> Parameters: %支付%(String) -->
    SELECT * FROM `trans` WHERE `body` LIKE #{body}
  </select>

  <select id="selectByFixedBody" parameterType="java.lang.String" resultType="mybatis.domain.Trans">
    <!-- Preparing: select * from `trans` where `body` like '%支付%'  -->
    SELECT * FROM `trans` WHERE `body` LIKE '%${value}%'
  </select>

  <select id="selectByQueryVO" parameterType="mybatis.domain.QueryTransVO" resultType="mybatis.domain.Trans">
    <!-- 基于ognl表达式取出数据
            queryTransVO.trans.body
            queryTransVO.trans.subject
    -->
    SELECT * FROM `trans` WHERE `body` = #{trans.body} AND `subject` = #{trans.subject}
  </select>

  <select id="getTotal" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM `trans`
  </select>
</mapper>